---
name: Build and test

on:
  push:
    branches:
      - main
      - 1password6
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install yamllint ansible ansible-lint

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  test-osx:
    name: Test on OSX
    runs-on: macos-latest

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Uninstall GitHub Actions' built-in Homebrew.
        run: tests/uninstall-homebrew.sh

      - name: Uninstall GitHub Actions' built-in browser installs.
        run: |
          sudo rm -rf /Applications/Firefox.app
          sudo rm -rf /Applications/Google\ Chrome.app

      - name: Install test dependencies.
        run: sudo pip3 install ansible

      # You can use a test config by adding "cp tests/config.yml ./config.yml"
      - name: Set up the test environment.
        run: |
          cp tests/ansible.cfg ./ansible.cfg
          cp tests/inventory ./inventory
          ansible-galaxy install -r requirements.yml

      - name: Test the playbook's syntax.
        run: ansible-playbook main.yml --syntax-check

      - name: Test the playbook.
        # run: ansible-playbook -v main.yml
        run: ansible-playbook -v main.yml
        env:
          ANSIBLE_FORCE_COLOR: '1'

      - name: Idempotence check.
        run: |
          idempotence=$(mktemp)
          ansible-playbook main.yml | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: '1'

      - name: Start iterm2 and take a screenshot
        run: |
          open /Applications/iTerm.app
          mkdir -p screenshots
          sleep 3
          screencapture screenshots/iterm.jpg

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            **/screenshots/*
